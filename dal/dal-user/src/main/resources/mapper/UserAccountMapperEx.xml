<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miaojiaosan.user.dal.mapperex.UserAccountMapperEx">

    <resultMap id="BaseResultMap"
               type="com.miaojiaosan.user.dal.dao.UserAccountDAO"
               extends="com.miaojiaosan.user.dal.mapper.UserAccountMapper.BaseResultMap"/>

    <insert id="insert" parameterType="com.miaojiaosan.user.dal.dao.UserAccountDAO" keyProperty="id" useGeneratedKeys="true">
        insert into user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
                account,
                password,
            <if test="nickname != null">
                nickname,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="refreshToken != null">
                refresh_token,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="modify != null">
                modify,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        select
        <trim  suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
                #{account,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="refreshToken != null">
                #{refreshToken,jdbcType=BLOB},
            </if>
            <if test="version != null">
                #{version,jdbcType=BIGINT},
            </if>
            <if test="modify != null">
                #{modify,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
        </trim>
            from dual
            where not exists(select 1 from user_account where account = #{account,jdbcType=VARCHAR} )
    </insert>

    <update id="modify" parameterType="com.miaojiaosan.user.dal.dao.UserAccountDAO">
        update user_account
         <set>
             <if test = "account != null">
                account = #{account,jdbcType=VARCHAR},
             </if>
             <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
             </if>
             <if test="nickname != null">
                 nickname = #{nickname,jdbcType=VARCHAR},
             </if>
             <if test="picture != null">
                 picture = #{picture,jdbcType=VARCHAR},
             </if>
             <if test="email != null">
                 email = #{email,jdbcType=VARCHAR},
             </if>
             <if test="phone != null">
                 phone = #{phone,jdbcType=VARCHAR},
             </if>
             <if test="refreshToken != null">
                 refresh_token = #{refreshToken, jdbcType=BLOB},
             </if>
             <if test="version != null">
                 version = #{version,jdbcType=BIGINT},
             </if>
             <if test="modify != null">
                 modify = #{modify,jdbcType=BIGINT},
             </if>
             <if test="userId != null">
                 user_id = #{userId,jdbcType=BIGINT},
             </if>
         </set>
         <where>
             and id = #{id, jdbcType=BIGINT}
         </where>
    </update>

    <update id="refreshToken" parameterType="com.miaojiaosan.user.dal.dao.UserAccountDAO">
        update user_account set
        refresh_token = #{refreshToken, jdbcType=BLOB},
        modify = #{modify, jdbcType=BIGINT}
        where id = #{id, jdbcType=BIGINT}
    </update>

    <select id="byAccount" parameterType="string" resultMap="BaseResultMap">
        select
        id, account, password,
      nickname, picture, email,
      phone, refresh_token, version,
      modify, modify_time, user_id
      from user_account where account = #{account,jdbcType=VARCHAR}
    </select>
</mapper>