server:
  port: 8001


spring:
  security:
    user:
      name: user
      password: user
  profiles:
    active: eureka
  application:
    name: user
  redis:
    host: www.miaojiaosan.com
    port: 9736
    database: 0
    timeout: 3000ms
    password: redis
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://www.immortal.net.cn:3306/miaojiaosan?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
      username: root
      password: immortal
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 10
      min-idle: 10
      max-active: 100
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #      filters: stat,wall
      #      use-global-data-source-stat: true
      #      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  page-size-zero: false
  params: count=countSql

management:
  #默认健康检查全部禁用
#  health:
#    defaults:
#      enabled: false
  endpoints:
    web:
      exposure:
        include: '*'


info:
  app:
    name: user
  build:
    artifactId: ${project.artifactId}
    modelVersion: ${project.version}
    eureka:
  client:
    healthcheck:
      #开启健康检查
      enabled: true
    service-url:
      defaultZone: http://eureka:eureka@eureka:9000/eureka
#      ,http://eureka:eureka@duplicate:9001/eureka
  instance:
    #注册服务名
#    instance-id: user
    #显示ip
    prefer-ip-address: true
    #心跳检查时间间隔 默认30s
    lease-renewal-interval-in-seconds: 2
    #超过时间认为服务已死 默认90s
    lease-expiration-duration-in-seconds: 5

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          enabled: true
          semaphore:
            maxConcurrentRequests: 10
          thread:
            timeoutInMilliseconds: 1000

security:
  oauth2:
    client:
      access-token-uri: http://zuul/jwt-proxy/oauth/token
      grant-type: password
      scope: all